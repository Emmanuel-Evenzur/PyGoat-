name: CI Pipeline

on:
  push:
    branches:
    - master


jobs:
  SonarQube:
    environment: main
    runs-on : ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}  
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_IMAGENAME:  "pygoatghaimage"
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGENAME }}:${{ github.run_id }}

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization: "gantahari1"
            -Dsonar.projectKey: "gantahari1_gantahari"
            
          
  DockerScout:
    if: false
    environment: main
    runs-on : ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}  
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_IMAGENAME:  "pygoatghaimage"
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGENAME }}:${{ github.run_id }}

      - name: Analyze for critical and high CVEs
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ steps.meta.outputs.tags }}
          # sarif-file: sarif.output.json
          summary: true

      # - name: Upload SARIF result
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: sarif.output.json
      
      
